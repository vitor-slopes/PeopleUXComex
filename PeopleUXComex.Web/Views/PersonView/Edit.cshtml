@model PeopleUXComex.Web.Models.EditPersonViewModel

@{
    ViewBag.Title = "Editar Pessoa";
}

<h2>Editar Cadastro</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Pessoa</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Person.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Person.Name, "Nome", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Person.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Person.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Person.Phone, "Telefone", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Person.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Person.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Person.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Person.CPF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Person.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retornar para Lista de Cadastros", "Index")
</div>

<h3>Cadastro de Endereços</h3>
<p>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addressModal">Adicionar Endereço</button>
</p>

@if (Model.Addresses != null && Model.Addresses.Any())
{
    <table class="table">
        <tr>
            <th>Rua</th>
            <th>CEP</th>
            <th>Cidade</th>
            <th>Estado</th>
            <th></th>
        </tr>

        @foreach (var address in Model.Addresses)
        {
            <tr>
                <td>@address.Street</td>
                <td>@address.CEP</td>
                <td>@address.City</td>
                <td>@address.State</td>
                <td>
                    @Html.ActionLink("Editar", "EditAddress", new { id = address.Id }) |
                    @Html.ActionLink("Excluir", "DeleteAddress", new { id = address.Id })
                </td>
            </tr>
        }
    </table>
}
else
{
    <p>Sem endereços disponíveis.</p>
}

<!-- Modal -->
<div class="modal fade" id="addressModal" tabindex="-1" role="dialog" aria-labelledby="addressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addressModalLabel">Adicionar Endereço</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("AddAddress", "PersonView", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("PersonId", Model.Person.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewAddress.Street, "Rua", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NewAddress.Street, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewAddress.Street, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewAddress.CEP, "CEP", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NewAddress.CEP, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewAddress.CEP, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewAddress.City, "Cidade", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NewAddress.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewAddress.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewAddress.State, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NewAddress.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewAddress.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Adicionar endereço" class="btn btn-primary" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJQ6NXsF0X0pHrmEN6W2Jc/BFCbsMC+6DLIWQ/R2IwhcEim+6" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>

    <script>
        $(document).ready(function() {
            console.log("Document ready. Adding click event listener to + Address button.");
            $('#addressModal').on('show.bs.modal', function (e) {
                console.log("Modal is shown");
            });

            $('button[data-target="#addressModal"]').on('click', function() {
                console.log("+ Address button clicked. Showing modal.");
                $('#addressModal').modal('show');
            });
        });
    </script>
}
